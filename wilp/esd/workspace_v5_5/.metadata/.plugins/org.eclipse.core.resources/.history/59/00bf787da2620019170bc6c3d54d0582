;copy
;A4 = &x, B4 = &y, A6 = 64, B3 = return address
.def copy
MV .S2X A4,B7 ;move the content of A4 to B7(make copy of src addr)
|| MV .S1X B4,A7 ;move the content of B4 to A7(make copy of dst addr)
LDDW .D1T2 *A4, B9:B8 ;load the value present at address A4/x to B reg pair
|| LDDW .D2T1 *++B7[1],A9:A8 ;load value present at address B7 = x+8 to A reg pair
LDDW .D1T2 *++A4[2], B11:B10 ;load the value present at addr A4 = x+16 to B reg pair
|| LDDW .D2T1 *++B7[2],A11:A10 ;load value present at address B7 = 24 to A reg pair
LDDW .D1T2 *++A4[2], B13:B12 ;load the value present at addr A4 = x+32 to B reg pair
|| LDDW .D2T1 *++B7[2],A13:A12 ;load value present at address B7 = 40 to A reg pair
LDDW .D1T2 *++A4[2], B15:B14 ;load the value present at addr A4 = x+48 to B reg pair
|| LDDW .D2T1 *++B7[2],A15:A14 ;load value present at address B7 = 56 to A reg pair
B .S2 B3 ;branch back to calling address stored in B3
STDW .D1T2 B9:B8, *A7 ;store content of reg pair B to addr stored at A7/y
|| STDW .D2T1 A9:A8, *++B4[1] ;store content of reg pair A to addr stored at B4 = y+8
STDW .D1T2 B11:B10, *++A7[2] ;store content of reg pair B to addr stored at A7 = y+16
|| STDW .D2T1 A11:A10, *++B4[2] ;store content of reg pair A to addr stored at B4 = y+24
STDW .D1T2 B13:B12, *++A7[2] ;store content of reg pair B to addr stored at A7 = y+32
|| STDW .D2T1 A13:A12, *++B4[2] ;store content of reg pair A to addr stored at B4 = y+40
STDW .D1T2 B15:B14, *++A7[2] ;store content of reg pair B to addr stored at A7 = y+48
|| STDW .D2T1 A15:A14, *++B4[2] ;store content of reg pair A to addr stored at B4 = y+56
